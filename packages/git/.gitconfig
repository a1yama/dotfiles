[core]
    autocrlf = input
[user]
    name = a1yama
    email = a1yama1123@gmail.com
[alias]
    cof = !git branch -a | fzf | xargs git checkout
    lg = log --graph --decorate --abbrev-commit --format=format:'%C(blue)%h%C(reset) - %C(green)(%ar)%C(reset)%C(yellow)%d%C(reset)\n  %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
    aa = add -A
    cm = commit -m
    plo = pull origin
    pso = push origin
    cho = checkout
    cob = checkout -b
    st = status
    ss = status -s
    fe = fetch
	psf = "!f() { branch=$(git branch --all | grep -v \"\\\\->\" | sed \"s/^..//\" | fzf); [ -n \"$branch\" ] && git push origin \"${branch##*/}\"; }; f"
	plf = "!f() { branch=$(git branch --all | grep -v \"\\\\->\" | sed \"s/^..//\" | fzf); [ -n \"$branch\" ] && git pull origin \"${branch##*/}\"; }; f"
    psc = !git push origin $(git rev-parse --abbrev-ref HEAD)
    plc = !git pull origin $(git rev-parse --abbrev-ref HEAD)
	dff = "!f() { files=$(git status --short | grep -E \"^( M| M)\" | awk \"{print \\$2}\" | fzf --multi); [ -n \"$files\" ] && git diff -- $files; }; f"
    dfno = "diff --name-only"
	adf = "!f() { files=$(git status --short | grep -E \"^( M| M|??)\" | awk \"{print \\$2}\" | fzf --multi); [ -n \"$files\" ] && git add $files; }; f"
	rsf = "!f() { files=$(git status --short | grep -E \"^( M| M| D)\" | awk \"{print \\$2}\" | fzf --multi); [ -n \"$files\" ] && git restore $files; }; f"
	mgf = "!f() { branch=$(git branch --all | grep -v \"\\->\" | sed \"s/^..//\" | fzf); [ -n \"$branch\" ] && git merge --no-ff \"${branch##*/}\"; }; f"
	deletebranch = "!f() { branches=$(git branch --format=\"%(refname:short)\" | fzf --multi); [ -n \"$branches\" ] && git branch -d $branches; }; f"
	deletebranchf = "!f() { branches=$(git branch --format=\"%(refname:short)\" | fzf --multi); [ -n \"$branches\" ] && git branch -D $branches; }; f"
[rebase]
    autostash = true
[pull]
    autostash = true
